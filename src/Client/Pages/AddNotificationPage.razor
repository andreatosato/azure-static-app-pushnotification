@page "/notifications"

<Heading Size="HeadingSize.Is3">Notifications</Heading>

    <Field>
        <TextEdit @bind-Text="@Title" Placeholder="@nameof(Title)"></TextEdit>
    </Field>
    <Field>
        <MemoEdit @bind-Text="@Message" Placeholder="@nameof(Message)" Rows="5"></MemoEdit>
    </Field>

<Fields>
    <Field>
        <TextEdit @bind-Text="@ActionOne.action" Placeholder="@nameof(ActionOne.action)"></TextEdit>
    </Field>
    <Field>
        <TextEdit @bind-Text="@ActionOne.title" Placeholder="@nameof(ActionOne.title)"></TextEdit>
    </Field>
    <Field>
        <TextEdit @bind-Text="@ActionOne.icon" Placeholder="@nameof(ActionOne.icon)"></TextEdit>
    </Field>
</Fields>
<Fields>
    <Field>
        <TextEdit @bind-Text="@ActionTwo.action" Placeholder="@nameof(ActionTwo.action)"></TextEdit>
    </Field>
    <Field>
        <TextEdit @bind-Text="@ActionTwo.title" Placeholder="@nameof(ActionTwo.title)"></TextEdit>
    </Field>
    <Field>
        <TextEdit @bind-Text="@ActionTwo.icon" Placeholder="@nameof(ActionTwo.icon)"></TextEdit>
    </Field>
</Fields>

<Fields>
    <Field>
        <TextEdit @bind-Text="@Badge" Placeholder="@nameof(Badge)"></TextEdit>
    </Field>
    <Field>
        <TextEdit @bind-Text="@Image" Placeholder="@nameof(Image)"></TextEdit>
    </Field>
    <Field>
        <TextEdit @bind-Text="@Icon" Placeholder="@nameof(Icon)"></TextEdit>
    </Field>
</Fields>

<Row>
    <Column ColumnSize="ColumnSize.IsHalf">
        <Button Clicked="AddNotification"><Image Name="add_alert"></Image> Normal </Button>
    </Column>
    <Column ColumnSize="ColumnSize.IsHalf">
        <Button Clicked="AddNotificationWithImage"><Image Name="add_alert"></Image>With Image</Button>
    </Column>
</Row>

@code
{
    [Inject]
    public HttpClient Client { get; set; }

    private string Title { get; set; } = "Welcome notification";
    private string Message { get; set; } = "This is simple Message";
    private string Badge { get; set; } = "assets/beagle.jpg";
    private string Image { get; set; } = "assets/Superman.jpg";
    private string Icon { get; set; } = "assets/cat.png";

    public NotifationAction ActionOne { get; set; } = new NotifationAction();
    public NotifationAction ActionTwo { get; set; } = new NotifationAction();

    protected override async Task OnInitializedAsync()
    {
        ActionOne = new NotifationAction()
        {
            action = "One",
            title = "OneTitle 👍",
            icon = "assets/action-one/icon.png"
        };

        ActionTwo = new NotifationAction()
        {
            action = "Two",
            title = "TweTitle",
            icon = "assets/action-two/icon.png"
        };
    }

    public async Task AddNotification()
    {
        NotificationMessageText notification = new NotificationMessageText()
        {
            message = Title,
            requireInteraction = true,
            vibrate = new[] { 100, 50, 100 },
            actions = new NotifationAction[] {
                new NotifationAction { action = ActionOne.action, icon = ActionOne.icon, title = ActionOne.title}
            },
            body = Message
        };
        await Client.PostAsJsonAsync("NotificationOnlyText", notification).ConfigureAwait(false);
    }

    public async Task AddNotificationWithImage()
    {
        NotificationImage notification = new NotificationImage()
        {
            image = Image,
            icon = Icon,
            badge = Badge,
            message = Title,
            requireInteraction = true,
            vibrate = new[] { 100, 50, 100 },
            actions = new NotifationAction[] {
                new NotifationAction { action = ActionOne.action, icon = ActionOne.icon, title = ActionOne.title},
                new NotifationAction { action = ActionTwo.action, icon = ActionTwo.icon, title = ActionTwo.title}
            },
            body = Message
        };
        await Client.PostAsJsonAsync("NotificationWithImages", notification).ConfigureAwait(false);
    }
}
