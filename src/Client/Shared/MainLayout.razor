@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject ISnackbarService SnackbarService

<Layout Sider="true">
    <LayoutSider>
        <LayoutSiderContent>
            <NavMenu></NavMenu>
        </LayoutSiderContent>
    </LayoutSider>
    <Layout>
        <LayoutHeader Fixed="true">
            <Bar Breakpoint="Breakpoint.Desktop" Background="Background.Primary" ThemeContrast="ThemeContrast.Light" >
                <BarBrand>
                    <BarItem>
                        <BarLink Clicked="ToggleSidebar">
                            Blazoring PWA
                        </BarLink>
                    </BarItem>
                </BarBrand>
                <BarMenu>
                    <BarEnd>
                        <BarItem>
                            <BarLink To="https://github.com/andreatosato/azure-static-app-pushnotification" Target="Target.Blank">
                                <i class="fab fa-github text-color-primary"></i>
                            </BarLink>
                        </BarItem>
                    </BarEnd>
                </BarMenu>
            </Bar>
        </LayoutHeader>
        <LayoutContent>
            <Container Fluid="true">
                <AutoBreadcrum></AutoBreadcrum>
                @Body
                <Snackbar @ref="snackbarRef">
                    <SnackbarBody>
                        @SnackbarMessage
                    </SnackbarBody>
                    <SnackbarAction Clicked="@(()=> snackbarRef.Hide())"><Icon Name="IconName.Clear"></Icon></SnackbarAction>
                </Snackbar>
            </Container>

        </LayoutContent>
    </Layout>
</Layout>

@code{
    protected override void OnInitialized()
    {
        SnackbarService.OnShow += OnShow;
    }

    public void Dispose()
    {
        SnackbarService.OnShow -= OnShow;
    }

    public void OnShow(string message, SnackbarType type)
    {
        SnackbarType = type;
        SnackbarMessage = message;
        snackbarRef.Show();
    }

    Snackbar snackbarRef;
    SnackbarType SnackbarType;
    string SnackbarMessage;

    string menuIcon = "menu";
    void ToggleSidebar()
    {
        if (AppStore.Sidebar.Visible)
            menuIcon = "menu";
        else
            menuIcon = "menu_open";
        AppStore.Sidebar.Toggle();
    }
}